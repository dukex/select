select-configuration:
  title: npm i g Test 223
  menus:
    - group: 회원
      name: 회원 목록
      path: users/list
    - group: 회원
      name: 카카오 가입자
      path: users/kakao
      placement: tab-only
    - group: 회원
      name: 고객 목록
      path: users/customer
      placement: tab-only
    - group: 회원
      name: 휴면회원 목록
      path: users/dormant
      placement: tab-only
    - group: 회원
      name: 메시지 목록
      path: users/dm
      placement: tab-only
    # - group: 회원
    #   name: 등급 관리
    #   path: users/level
    #   placement: tab-only
    - group: 회원
      name: 마케팅동의내역 관리
      path: users/agree_marketing
      placement: tab-only
      access-control: allow_qa
    - group: 워크스페이스
      name: 워크스페이스 관리
      path: workspaces/state
    - group: 구독자
      name: 구독자 관리
      path: subscriptions
    - group: 결제
      name: 카드승인 관리
      path: payment/cards
    - group: 결제
      name: 포인트 내역
      path: payment/point
    - type: divider
    - group: 메뉴2
      name: 뉴스탭 관리
      path: news
      permission: allow_qa
    - group: 메뉴2
      name: 배너전시 관리
      path: banner
      permission: allow_news
    - group: 메뉴2
      name: 배너 코드 
      path: https://pathtogooglesheet.com
      target: _blank

  access-control:
    - name: allow_qa
      allow_list: 
        - cs
        - qa
        - admin
      allow_open: 
        - qa
        - admin
      allow_edit:
        - admin
      allow_export:
        - qa
    - name: allow_news
      allow_view: 
        - news
        - cs
        - qa
        - admin
      allow_edit:
        - news
        - qa
        - admin
  users:
    - id: admin
      pw: YWRtaW4=
      roles:
        - cs
        - qa
        - admin
        - news
  integrations:
    google-spreadsheets:
      restrict-domain: test.com
  pages:
    - path: users/list
      blocks:
        - type: query
          resource: mysql.qa
          name: 추가
          sql: >
            insert into user
            set email = :email, created_at = NOW()
          params:
            - key: email
        - type: query
          resource: mysql.qa
          name: 생성일 변경
          sql: >
            update user
            set created_at = :c
            where id = :id
          params:
            - key: c
            - key: id
            
        - type: query
          resource: mysql.qa
          autoload: true
          name: 회원목록
          sql: > 
            SELECT id, email, provider_kakao_id, created_at, last_signed_at 
            FROM user
            :orderby
          params:
            - key: orderby
              label: '정렬'
              raw: true
              dropdown:
                - ORDER BY last_signed_at DESC, created_at ASC
                - ORDER BY id DESC
                - ORDER BY id ASC
                - " "
              dropdown_labels:
                - 최근로그인
                - 최근아이디
                - 마지막아이디
                - (선택안함)
          viewModal:
            displayParentRow: true
            blocks:
              - type: query
                resource: mysql.qa
                name: 워크스페이스 이용중
                # display: col-2
                autoload: true
                sql: > 
                  SELECT DISTINCT w.id, w.name, w.created_at
                  FROM user, workspace_role, workspace AS w
                  WHERE user.id = :uid
                    AND workspace_role.user_id = user.id
                    AND w.id = workspace_role.workspace_id
                params:
                  - key: uid
                    label: 'ID'
                    format: 'number'
                    valueFromRow: id
                refs:
                  - column: id
                    param: wid
                    href: /workspaces/state
                    autoload: true
              - type: query
                resource: mysql.qa
                name: 카카오톡 로그인 초기화
                sql: >
                  update user
                  set provider_kakao_id = NULL
                  where id = :id
                params:
                  - key: id
                    valueFromRow: id
              - type: query
                resource: mysql.qa
                name: 카카오톡 계정 연결
                sql: >
                  update user
                  set provider_kakao_id = :provider_kakao_id
                  where id = :id
                params:
                  - key: provider_kakao_id
                    defaultValueFromRow: provider_kakao_id
                    # 1433397234
                  - key: id
                    valueFromRow: id
              # - type: query
              #   resource: mysql.qa
              #   name: 해당 이메일로 카카오톡 계정연동을 이전
              #   sql: >
              #     update user
              #     set provider_kakao_id = NULL
              #     where id = :id;

              #     update user
              #     set provider_kakao_id = :provider_kakao_id
              #     where id = (
              #       select id from user
              #       where email = :email
              #     );
              #   params:
              #     - key: id
              #       valueFromRow: id
              #     - key: provider_kakao_id
              #       valueFromRow: provider_kakao_id
              #     - key: email
        # - type: query
        #   resource: mysql.qa
        #   autoload: true
        #   name: 회원목록 통계
        #   sql: > 
        #     SELECT 
        #       COUNT(id) AS '전체가입자', 
        #       COUNT(provider_kakao_id) AS '카카오 가입자',
        #       (
        #         SELECT COUNT(id) FROM user
        #         WHERE created_at > NOW() - INTERVAL 7 DAY
        #       ) AS '최근 7일 가입자'
        #     FROM user
        - type: query
          resource: mysql.qa
          sql: SELECT * FROM user WHERE id = :uid
          name: 회원개별조회
          params:
            - key: uid
              label: 'ID'
              format: 'number'
      
    - path: users/customer
      blocks:
        - type: query
          resource: mysql.qa
          autoload: true
          sql: >
            SELECT id, fullname AS '고객명' FROM customer
        
    - path: users/kakao
      blocks:
        - type: query
          resource: mysql.qa
          autoload: true
          sql: >
            SELECT id, email AS '이메일', provider_kakao_id AS '카카오ID', created_at AS '가입일', last_signed_at AS '최근활동일' FROM user
            WHERE provider_kakao_id IS NOT NULL
        - type: query
          resource: mysql.qa
          sql: > 
            SELECT * FROM user 
            WHERE provider_kakao_id IS NOT NULL 
              AND id = :uid
          params:
            - key: uid
              label: 'ID'
              format: 'number'
    - path: users/dm
      blocks:
        - type: query
          resource: mysql.qa
          # autoload: true
          sql: >
            SELECT id, workspace_id AS '업체ID', chat_id AS '채팅ID', label AS '구분코드', user_id AS '사용자ID', 
              created_at AS '시작일'
            FROM chat_message
            ORDER BY id DESC
        - type: query
          resource: mysql.qa
          sql: >
            SELECT * FROM chat_message
            WHERE label = :l
          params:
            - key: l
              label: 분류코드
              # datalist:
              #   - CUS
              #   - EMP
              #   - NOTE
              dropdown:
                - CUS
                - EMP
                - NOTE
      modal:
        path: id
        displayParentRow: false
        blocks:
          - type: query
            resource: mysql.qa
            name: 상세
            autoload: true
            display: col-2
            sql: > 
              SELECT * FROM chat_message
              WHERE id = :mid
            params:
              - key: mid
                valueFromRow: id
    - path: workspaces/state
      blocks:
        - type: query
          resource: mysql.qa
          name: general info
          # autoload: true
          showSubmitButton: false
          sql: > 
            select * from workspace
            where id = :wid
          editModal:
            blocks:
              - type: query
                resource: mysql.qa
                # name: '다 수정'
                sql: >
                  update workspace
                  set name = :name,
                      public_domain = :public_domain
                  where id = :id
                params:
                  - key: name
                    format: text
                    label: '워크스페이스 이름'
                    defaultValueFromRow: name
                  - key: public_domain
                    format: text
                    label: '워크스페이스 도메인 (공개)'
                    defaultValueFromRow: public_domain
                  - key: id
                    valueFromRow: id
              # - type: query
              #   resource: mysql.qa
              #   name: '이름 변경'
              #   sql: >
              #     update workspace
              #     set name = :name
              #     where id = :id
              #   log:
              #     name: workspace.update
              #     sql: select id, name, public_domain from workspace where id = :id
              #   params:
              #     - key: name
              #       format: text
              #       label: '워크스페이스 이름'
              #       defaultValueFromRow: name
              #     - key: id
              #       valueFromRow: id
              # - type: query
              #   resource: mysql.qa
              #   name: '도메인 변경'
              #   sql: >
              #     update workspace
              #     set public_domain = :public_domain
              #     where id = :id
              #   # and (
              #   #   select count(id) from workspace
              #   #   where public_domain = :public_domain
              #   #     and id != :id
              #   # ) = 0;

              #   # log:
              #   #   name: workspace.update
              #   #   sql: select id, name, public_domain from workspace where id = :id
              #   # validation-sql: 
              #   #   - sql: > 
              #   #       select count(id) from workspace
              #   #       where public_domain = :public_domain
              #   #         and id != :id
              #   #     okValue: 0
              #   #     # okLength: 1
              #   #     message: '중복된 도메인입니다.'

              #   params:
              #     - key: public_domain
              #       format: text
              #       label: '워크스페이스 도메인 (공개)'
              #       defaultValueFromRow: public_domain
              #     - key: id
              #       valueFromRow: id

              # - type: query
              #   resource: mysql.qa
              #   name: 저장이력
              #   autoload: true
              #   sql: >
              #     select * from workspace_log
              #     where id = :id
              #       and action = 'update workspace'
              #     order by id desc
              #     limit 100
              #   params:
              #     - key: id
              #       valueFromRow: id
              # - type: log-viewer
              
        - type: query
          resource: mysql.qa
          name: log
          # autoload: true
          showSubmitButton: false
          sql: > 
            select * from workspace_log
            where wid = :wid
        - type: query
          resource: mysql.qa
          name: profile
          # autoload: true
          showSubmitButton: false
          sql: > 
            select * from workspace_profile
            where workspace_id = :wid
        - type: action
          resource: mysql.qa
          label: 추가
          name: new workspace
          # autoload: true
          # showSubmitButton: false
          sql: > 
            insert into workspace_profile
            set name = :name
                created_at = NOW()
          params:
            - key: name
              format: text
      params:
        - key: wid
          label: 'ID'
          format: 'number'
        
    - path: subscriptions
      blocks:
        - type: markdown
          content: >
            1.  List item one.

                List item one continued with a second paragraph followed by an
                Indented block.

                    $ ls *.sh
                    $ mv *.sh ~/tmp

                List item continued with a third paragraph.

            2.  List item two continued with an open block.

                This paragraph is part of the preceding list item.

                1. This list is nested and does not require explicit item continuation.

                  This paragraph is part of the preceding list item.

                2. List item b.

                This paragraph belongs to item two of the outer list.
        - type: http
          axios:
            method: GET
            url: https://gist.githubusercontent.com/eces/c267436ddeec8917b47ee666b0d5e955/raw/892877e7035c4f61e946848a3f6da7e9983cab15/test.json
          rowsPath: rows

        - type: http
          axios:
            method: POST
            url: https://httpbin.org/anything?cid={{id}}
            data:
              '고객아이디': customer-{{id}}
          params:
            - key: id
              label: '고객ID (수신거부 대상자 처리)'
              format: 'number'

          
    - path: agree_marketing
      blocks:
        # - type: markdown
        #   content: test
        - type: query
          resources: 
            - mysql.qa
          sql: SELECT * FROM user_promotion_log
          # pagination: true
          # pagination-size: 30
          # sort: true
          # sort-columns:
          params:
            - key: id
              label: '고객ID'
              format: 'number'
    - path: banner
      blocks:
        # - type: query
        #   resources: 
        #     - mysql.qa
        #   sql: SELECT * FROM banner_post WHERE title LIKE '%:q%'
        #   pagination: true
        #   pagination-size: 100
        #   sort: true
        #   # sort-columns:
        #   params:
        #     - key: q
        #       label: '배너문구'
        #       format: 'string'
        # - type: query
        #   resources: 
        #     - mysql.qa
        #   sql: SELECT * FROM banner_post WHERE status = :q
        #   params:
        #     - key: q
        #       label: '상태'
        #       format: 'select'
        - type: query
          resources: 
            - mysql.qa
          params:
            - sql: SELECT * FROM user_promotion WHERE user_id = :uid
              fields: 
                label: '고객ID'
                key: uid
              
            - sql: | 
                SELECT user_promotion.* 
                FROM user_promotion, user 
                WHERE user_promotion.user_id = :uid 
                  AND user.id = user_promotion.user_id
                  AND user.name = :uname
              
              fields: 
                - label: '고객ID'
                  key: uid
                  required: true
                - label: '고객명'
                  key: uname
                  required: true

            
            - sql: | 
                SELECT user_promotion.* 
                FROM user_promotion
                WHERE user_promotion.title LIKE %:pname%
                   OR user_promotion.pcode LIKE %:pcode%
              
              fields: 
                - label: '프로모션 이름'
                  key: pname
                  maxlength: 20
                  required-any: true
                - label: '코드'
                  key: pcode
                  maxlength: 10
                  required-any: true
            
            - sql:
                select: user_promotion.* 
                from: user_promotion
              
              fields: 
                - label: '시작일'
                  and-where: user_promotion.created_at BETWEEN :from AND :to
                  key: from
                  required: true
                - label: '종료일'
                  key: to
                  required: true
                - label: '동의여부'
                  key: agree_state
                  and-where: user_promotion.agree_state = :agree_state
                - label: '제공여부'
                  key: agree3_state
                  or-where: user_promotion.agree3_state = :agree3_state
          modal:
            path: id
            blocks: 
              - markdown: |
                ### 메모
              - memo: true
                # by: user
              - markdown: |
                ### 거래내역
              - sql: |
                  SELECT * from user_history
                  WHERE user_id = :user_id
                  ORDER BY id DESC
                  LIMIT 100
                now: true
              - sql: 
                  # test: >
                  #   SELECT *
                  #   FROM user_history
                  #   WHERE user_id = :user_id
                  #   /* if (from && to) { */
                  #     AND created_at BETWEEN :from AND :to
                  #   /* } */
                  select: '*'
                  from: user_history
                  where: user_id = :user_id
                  order-by: id DESC
                  # order-by: 
                  #   - user_id: ASC
                  #   - created_at: DESC
                  limit: 100
                fields: 
                  - label: '시작일'
                    and-where: created_at BETWEEN :from AND :to
                    key: from
                    required: true
                  - label: '종료일'
                    key: to
                    required: true
                  - label: '구분'
                    key: trade_type
                    type: select
                    options: 
                      매수: bid
                      매도: ask
                    and-where: trade_type = :trade_type

  internal-resources:
    redis:
      master:
        host: 127.0.0.1
        port: 6379
        db: 0
  resources:
    # - key: mysql.qa
    #   type: mysql
    #   host: tm.c6mxexammxw4.ap-northeast-2.rds.amazonaws.com
    #   port: 3306
    #   username: StudioUser
    #   password: c25aQ1lqS3cyZ1dCU0toZ0t5MkhjajVIYlo3Qjd3YjQ5OVA=
    #   database: studio-web-qa
    #   requestTimeout: 3000
    #   timezone: '+00:00'
    #   charset: "utf8mb4_general_ci"
    - key: mysql.qa
      type: mysql
      host: tm.c6mxexammxw4.ap-northeast-2.rds.amazonaws.com
      port: 3306
      username: user_ysg_qa
      password: MGU1YWNjZDEwZDFjM2FhMzhiZjUzZmM0MDUyZjM3OTFhOWU0N2QxM2M4NDk2YzBmNmNjNGE2ZDgwMTc1ZDJjMA==
      database: ysg
      requestTimeout: 3000
      timezone: '+00:00'
      charset: "utf8mb4_general_ci"

# secret:
#   hash: +x3VR4Fn<y3U6T&G
#   access_token: h{.V(eWpSbpU35J4

# policy:
#   session_expire: 43200