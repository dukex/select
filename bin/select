#!/usr/bin/env node

const app = require('..').app
const http = require('http')

// const __package = path.join(process.cwd(), 'package.json')

// if(!fs.existsSync(__package)){
//   console.log(chalk.red('package.json not found'))
//   return
// }


/**
 * Create HTTP server.
 */

const server = http.createServer(app)

/**
 * Listen on provided port, on all network interfaces.
 */

const port = app.get('port')

app.prehook( () => {
  server.listen(port)
  server.on('error', onError)
  server.on('listening', app.posthook)
})

/**
 * Event listener for HTTP server "error" event.
 */

function onError(error) {
  if (error.syscall !== 'listen') {
    throw error
  }

  const bind = typeof port === 'string'
    ? 'Pipe ' + port
    : 'Port ' + port

  // handle specific listen errors with friendly messages
  switch (error.code) {
    case 'EACCES':
      console.error(bind + ' requires elevated privileges')
      process.exit(1)
      break
    case 'EADDRINUSE':
      console.error(bind + ' is already in use')
      process.exit(1)
      break
    default:
      throw error
  }
}